<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Json Web Tokens</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <link href="../css/styles.css" rel="stylesheet" />
        <link href="../js/scripts.js">
        <script src="https://use.fontawesome.com/releases/v5.15.1/js/all.js" crossorigin="anonymous"></script>
       <style>
           
            img
            {
                display: flex;
                margin:5px auto 10px auto;
            }
        </style>
    </head>
    <body>
        <%- include("../../partials/header.ejs") %>
        <header class="container" style="margin-top:1rem">
            <h1>JSON Web Tokens (JWTs)</h1>
            <img src="../../images/WebAttacks/jwt.png" class="img-fluid" style="max-width: 100%; max-height: 500px;">
        </header>
        <div class="container" style="margin-top:1rem">
            <div class="definition">
                <p>JSON web tokens are a type of access tokens that are widely used web applications. A JWT is based on JSON(JavaScript Object) format.
                    <br>
                    To ensure the integrity of the token, a JWT includes a signature.
                </p>
            </div>
            <p>Unlike a cookie which can easily be forged<en>(neglecting exceptions)</en>, what makes a JWT hard to alter is the fact that it has a signature<en>(that either uses a secret key/private key to ensure integrity)</en></p>
        </div>
        <div class="container" style="margin-top:1rem">
            <div>
                <h2>How do JWTs work?</h2>
                <p>Just like cookies have name and value pairs, a JWT comprises : 
                    <ul>
                        <li>A Header</li>
                        <li>A Payload</li>
                        <li>A Signature</li>
                    </ul> </p>
            </div>
            <div id="header" style="margin-top:1rem">
                <h3>Header</h3>
                <p>A JWT begins with a header.The header
                    <ul>
                        <li>Is base64url encoded.</li>
                        <li>Tells about the algorithm used to generate the signature.</li>
                    </ul>
                </p>
                <p>The header looks like this : </p>
                <code>
                    {
                        "alg" : "HS256",
                        "type" : "JWT"
                    }
                    <br>  
                    When base64url encoded, this produces the following string : <span style="color: red;">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>
                </code>
            </div>
            <div id="payload" style="margin-top:1rem">
                <h3>Payload</h3>
                <p>A header is followed by the payload. Since JWTs are used in access control mechanisms, so the payload is such that it is relevant to the mechanism.
                    <br>
                    If the main purpose is to identify the user as an admin or any other non-admin user, the payload could be set as the one given below.
                </p>
                <code>
                    {access_type:"admin"}
                    <br>
                    When base64url encoded, this produces the following string : <span style="color: purple;">eyJhY2Nlc3NfdHlwZSI6ImFkbWluIn0</span>
                </code>
            </div>
            <div id="signature" style="margin-top:1rem">
                <h3>Signature</h3>
                <p>So, if the header and the payload are <en>basee64url</en> encoded can't they be easily changed?
                <br>
                Yes, they can be and this is what makes them insecure to use. But the third element in JWT makes them reliable and secure(to an extent, that we'll learn later) to use.
                <br>
                The third element of a JWT is its signature.
            </p>
            <p>Remember from the header section that it tells what algorithm to use? Well it tells the application to encrypt the header and the payload with a <abbr title="As set by the backend designer">key</abbr>  using the same algorithm.</p>
            <code>  
                signature = HMAC-SHA256(base64urlEncode(header) + '.' + base64urlEncode(payload), secret_key)
                <br>
                <span style="color:grey;">NOTE : I've used secret_key=learnjwt </span>
                <br>
                signature=<span style="color: lightskyblue;">DnV2av0k-4PxoDRVLORqAA8cju8sZ8xAgq8tcV9oG7Q</span>
            </code>
        </div>
        <div>
            <h3>JWT Token</h3>
            <p>For an application using JWT, you might see something as ,
                <br>
                <span style="color: red;">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.</span><span style="color: purple;">eyJhY2Nlc3NfdHlwZSI6ImFkbWluIn0.</span><span style="color: lightskyblue;">DnV2av0k-4PxoDRVLORqAA8cju8sZ8xAgq8tcV9oG7Q</span>
            </p>
        </div>
    </div>
    </body>
</html>